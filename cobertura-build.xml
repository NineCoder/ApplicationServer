<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- cobertura-bild.xml file is based on maven-build.xml 			        -->
<!-- $mvn ant:ant										 			        -->
<!-- maven-build.xml file edit							 			        -->
<!--    1. find -> target name compile -> depends contents delete		    -->
<!--    2. find -> target name package -> depends contents delete		    -->
<!-- ====================================================================== -->

<project name="ApplicationServer-from-cobertura" basedir=".">

<!-- ====================================================================== -->
<!-- based setting property already defined maven-build.properties	        -->
<!-- ====================================================================== -->
<!--  	
  <property name="maven.build.finalName" value="ApplicationServer" />
  <property name="maven.build.dir" value="target" />
  <property name="maven.build.outputDir" value="${maven.build.dir}/classes" />
  <property name="maven.build.testOutputDir" value="${maven.build.dir}/test-classes" />
  <property name="maven.test.reports" value="${maven.build.dir}/test-reports" />
 -->  
 
  <property name="src.dir" value="src" />
  <property name="cobertura.dir" value="${maven.build.dir}/cobertura" />
  <property name="cob.instrumented.dir" value="${cobertura.dir}/instrumented" />
  <property name="cob.library.dir" value="test-libs/cobertura" />
  <property name="mock.library.dir" value="test-libs/mockito" />
  <property name="project.libs.dir" value="${maven.build.dir}/${maven.build.finalName}/WEB-INF/lib" />
  
  <property name="resource.dir" value="${maven.build.outputDir}/webmapping"/>
  <property name="test.resource.dir" value="${maven.build.testOutputDir}/webmapping"/>

  <path id="cobertura.classpath">
    <fileset dir="${cob.library.dir}">
      <include name="cobertura-2.0.3.jar" />
      <include name="**/*.jar" />
    </fileset>
  </path>
  <path id="build.class.path">
    <fileset dir="${project.libs.dir}">
      <include name="*.jar" />
    </fileset>
  </path>	
  <path id="mockito.class.path">
    <fileset dir="${mock.library.dir}">
      <include name="*.jar" />
    </fileset>
  </path>		

  <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>
  
  <target name="all-clean" depends="clean" description="Clean the output files">
    <delete file="cobertura.ser"/>
  </target>
  
<!-- ====================================================================== -->
<!-- depends package >> maven-build.xml			   						    -->
<!-- ====================================================================== -->
  <target name="instrument" depends="compile, compile-tests, package">
    <cobertura-instrument todir="${cob.instrumented.dir}">
        <classpath location="${cob.library.dir}/cobertura-2.0.3.jar"/>
        <classpath location="${cob.instrumented.dir}"/>
		<classpath>
	              <path refid="build.class.path"/>
		</classpath>
		
        <fileset dir="${maven.build.outputDir}">
          <include name="**/*.class"/>
          <exclude name="**/*VO*"/>
          <exclude name="**/*Handler*"/>
          <exclude name="**/RealtimeTableController*"/>
          <exclude name="**/RealtimeInfoTableServiceImpTest*"/>
	      <exclude name="**/Handshake*"/>
        </fileset>
    </cobertura-instrument>
  </target>
  
	
  <target name="cover-test" depends="instrument">
  	<mkdir dir="${maven.test.reports}"/> 
  	<copy todir="${maven.build.testOutputDir}/com/openGDSMobileApplicationServer/service">
  		<fileset dir="${maven.build.outputDir}/com/openGDSMobileApplicationServer/service/"
  				 excludes="**/impl/*.class">
  		</fileset>
  	</copy> 
 	<mkdir dir="${maven.build.testOutputDir}/com/openGDSMobileApplicationServer/valueObject"/>
  	<copy todir="${maven.build.testOutputDir}/com/openGDSMobileApplicationServer/valueObject">
  		<fileset dir="${maven.build.outputDir}/com/openGDSMobileApplicationServer/valueObject/"/>
  	</copy>

  	<copy todir="${cob.instrumented.dir}/webmapping">
  		<fileset dir="${resource.dir}"/>
  	</copy>
  	<copy file="${maven.build.outputDir}/log4j2.xml" todir="${cob.instrumented.dir}"/>
  	
    <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
    	<sysproperty key="net.sourceforge.cobertura.datafile" file="cobertura.ser" />
        <formatter type="xml"/>
        <formatter type="plain" usefile="false"/>
        <classpath location="${cob.instrumented.dir}"/>
        <classpath refid="cobertura.classpath" />
		<classpath refid="mockito.class.path" />
		
        <classpath>
          <path refid="build.test.classpath"/>
          <pathelement location="${maven.build.testOutputDir}"/>
        </classpath>
	  	<batchtest todir="${maven.test.reports}">	  	
	      <fileset dir="${maven.build.testOutputDir}"> 
	          <include name="**/*Test*"/>
	          <exclude name="**/*VO*"/>
	          <exclude name="**/*Handler*"/>
	          <exclude name="**/RealtimeTableController*"/>
         	  <exclude name="**/RealtimeInfoTableServiceImpTest*"/>
	          <exclude name="**/Handshake*"/>
	      </fileset>
	    </batchtest> 
    	
    </junit>
  </target>

  <target name="coverage-report" depends="cover-test">
	<cobertura-report format="xml" srcdir="${src.dir}" destdir="${cobertura.dir}"/>
	<cobertura-report format="html" srcdir="${src.dir}" destdir="${cobertura.dir}"/>
  </target>
</project>